version: '3.8'

services:
  poetry-llm:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: stylistic-poetry-llm
    ports:
      - "5000:5000"
    volumes:
      - ./data:/app/data
      - ./output:/app/output
      - ./logs:/app/logs
      - ./models:/app/models
      - ./config/local.yaml:/app/config/local.yaml:ro
    environment:
      - POETRY_LLM_LOG_LEVEL=INFO
      - POETRY_LLM_DATA_DIR=/app/data
      - POETRY_LLM_OUTPUT_DIR=/app/output
      - POETRY_LLM_ENABLE_GPU=false
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "from src.stylometric import PoetryLLMSystem; system = PoetryLLMSystem(); print('healthy' if system.initialize() else 'unhealthy')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  poetry-llm-gpu:
    build:
      context: .
      dockerfile: Dockerfile.gpu
    container_name: stylistic-poetry-llm-gpu
    ports:
      - "5001:5000"
    volumes:
      - ./data:/app/data
      - ./output:/app/output
      - ./logs:/app/logs
      - ./models:/app/models
      - ./config/local.yaml:/app/config/local.yaml:ro
    environment:
      - POETRY_LLM_LOG_LEVEL=INFO
      - POETRY_LLM_DATA_DIR=/app/data
      - POETRY_LLM_OUTPUT_DIR=/app/output
      - POETRY_LLM_ENABLE_GPU=true
      - NVIDIA_VISIBLE_DEVICES=all
    runtime: nvidia
    restart: unless-stopped
    profiles:
      - gpu
    healthcheck:
      test: ["CMD", "python", "-c", "from src.stylometric import PoetryLLMSystem; system = PoetryLLMSystem(); print('healthy' if system.initialize() else 'unhealthy')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  redis:
    image: redis:7-alpine
    container_name: poetry-llm-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    profiles:
      - cache

  nginx:
    image: nginx:alpine
    container_name: poetry-llm-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./deployment/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./deployment/ssl:/etc/nginx/ssl:ro
    depends_on:
      - poetry-llm
    restart: unless-stopped
    profiles:
      - production

volumes:
  redis_data:

networks:
  default:
    name: poetry-llm-network